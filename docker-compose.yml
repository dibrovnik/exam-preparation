version: "3.8"

services:
  app:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: laravel_app
    volumes:
      - ./app:/var/www/html
    ports:
      - "8000:8000"
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - APP_KEY=
      - DB_HOST=db
      - DB_PORT=5432
      - DB_DATABASE=laravel
      - DB_USERNAME=postgres
      - DB_PASSWORD=secret
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASS=guest
    depends_on:
      - db
      - redis
      - rabbitmq
    networks:
      - botnet

  db:
    image: postgres:14
    container_name: laravel_db
    volumes:
      - db-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: laravel
    ports:
      - "5432:5432"
    networks:
      - botnet

  redis:
    image: redis:6.2
    container_name: laravel_redis
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:management
    container_name: laravel_rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672" # Порт для приложений
      - "15672:15672" # Порт для веб-интерфейса
    networks:
      - botnet

  telegram_bot:
    build:
      context: ./bot
      dockerfile: Dockerfile
    container_name: telegram_bot
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - APP_API_TOKEN=${APP_API_TOKEN}
      - APP_API_URL=${APP_API_URL}
    depends_on:
      - rabbitmq
    volumes:
      - ./bot:/bot
    networks:
      - botnet

volumes:
  db-data:
  redis-data:
networks:
  botnet:
